<?php
error_log('upload_single');
  ini_set('max_execution_time', 120);
  
  include_once './init_constants.php';
  include_once PATH_DOCROOT . '/init_database.php';
  include_once PATH_CLASS . '/CIdat.php';
  include_once PATH_CLASS . '/CUser.php';
  include_once PATH_CLASS . '/CTag.php';
  include_once PATH_CLASS . '/CSession.php';
  include_once PATH_CLASS . '/CFotobox.php';
  include_once PATH_CLASS . '/CUserManage.php';
  include_once PATH_CLASS . '/CFotoboxManage.php';
  include_once PATH_CLASS . '/CImageMagick.php';

  include_once PATH_INCLUDE . '/functions.php';
  include_once PATH_DOCROOT . '/init_session.php';
  
  $id =& CIdat::getInstance();
  $u  =& CUser::getInstance();
  $f  =& CFotobox::getInstance();
  $um =& CUserManage::getInstance();
  $fb =& CFotoboxManage::getInstance();
  $im =& CImageMagick::getInstance();
  $stamp = FF_YM_STAMP;

  if(isset($_REQUEST['user_enc']))
  {
    $enc = $u->userIdDec($_REQUEST['user_enc']);
    if($enc['match'] === false)
    {
      die();
    }

    $_USER_ID = $enc['id' ];
  }
error_log('user_authed');
  
  $user_data = $u->find($_USER_ID);
  
  $image_name   = isset($_REQUEST['fieldName']) ? $_REQUEST['fieldName'] : 'SourceFile_1';
  $image_size   = intval($_FILES[$image_name]['size'] / KB);
  $new_filename = time() . '_' . $f->safename($_FILES[$image_name]['name']);
  
  $privacy = intval($_REQUEST['privacySettingComputed']);

  $proceed    = is_uploaded_file($_FILES[$image_name]['tmp_name']) ? true : false;
error_log($_FILES['image_name']['tmp_name']);
error_log(json_encode($_FILES));
  if ($proceed === true)
  {
error_log('proceed');
    if($_POST['Angle_1'] > 0)
    {
      $im->rotate($_FILES[$image_name]['tmp_name'], $_FILES[$image_name]['tmp_name'], $_POST['Angle_1']);
    }
    
    $original_src = $fb->uploadOriginal($_FILES[$image_name]['tmp_name'], $new_filename);
    
    if($image_name == 'Filedata') // flash uploader
    {
      $im->exiftran(PATH_FOTOROOT . $original_src);
    }
    
    $thumb_src = $fb->uploadThumbnail(PATH_FOTOROOT . $original_src, $new_filename);
    $fb->uploadBase(PATH_FOTOROOT . $original_src, $new_filename);

    $exif_data = exif_read_data(PATH_FOTOROOT . $original_src);

    $image_info = getimagesize(PATH_FOTOROOT . $original_src);
    $image_key  = substr($id->nextID(FF_IMAGE_KEY) . randomString(), 0, 32);
		$name       = $_FILES[$ImageName]['name'];
		$width      = intval($image_info[0]);
		$height     = intval($image_info[1]);
		$description= $_POST['Description_1'];

    if(array_key_exists('DateTime', $exif_data))
    {
      $date_time = explode(' ', $exif_data['DateTime']);
      $date = explode(':', $date_time[0]);
      $time = explode(':', $date_time[1]);
      $taken_at = mktime($time[0], $time[1], $time[2], $date[1], $date[2], $date[0]);
    }
    else 
    {
      $taken_at = $exif_data['FileDateTime'];
    }
        
    // verify that exif data is legitimate
    if($taken_at > (NOW + 172800) || $taken_at == 0)
    {
      $taken_at = NOW;
    }

    $db_data  = array(
                  'up_u_id'   => $_USER_ID,
                  'up_key'    => $image_key,
                  'up_name'   => $description,
                  'up_size'   => $image_size,
                  'up_width'  => $width,
                  'up_height' => $height,
                  'up_description'  =>  '',
                  'up_original_path'=>  $original_src,
                  'up_thumb_path'   =>  $thumb_src,
                  'up_camera_make'  =>  $exif_data['Make'],
                  'up_camera_model' =>  $exif_data['Model'],
                  'up_taken_at'     =>  $taken_at,
                  'up_privacy'      =>  $privacy
                );

    $fotoId = $fb->add($db_data);
error_log($fotoId);    
    if($_REQUEST['tagsToAdd'] != '')
    {
      $tags = (array)explode(',', $_REQUEST['tagsToAdd']);
      $fb->addTags(array($fotoId), $tags, $_USER_ID);
    }

    unlink($_FILES[$image_name]['tmp_name']);
    
    // add to subscription data if public
    if(($privacy & PERM_PHOTO_PUBLIC) == PERM_PHOTO_PUBLIC)
    {
      include_once PATH_CLASS . '/CSubscriptionManage.php';
      $sm = &CSubscriptionManage::getInstance();
      
      $fotoData = $f->fotoData($fotoId);
      
      $sm->addData(array('sd_u_id' => $_USER_ID, 'sd_elementType' => 'Photo_Public', 'sd_element_id' => $fotoId, 'sd_thumbnail' => $fotoData['P_THUMB_PATH']));
      
      // add activity
      $um->addActivity($_USER_ID, $fotoId, 'newPhoto', $user_data['U_USERNAME'], $thumb_src, $image_key);
    }
    
    // set preferences as needed
    $prefs    = $u->prefs($_USER_ID);
    // if not already set ... set the HAS_UPLOADED preference
    if(intval($prefs['HAS_UPLOADED']) == 0)
    {
      $setPrefs['HAS_UPLOADED'] = 1;
    }
    
    // if using the flash uploader set the FLASH_UPLOADED preference
    if($image_name == 'Filedata')
    {
      $setPrefs['FLASH_UPLOADED'] = 1;
      // if uploading more than 10 photos then set the FLASH_UPLOADED_MULTIPLE preference
      if($_REQUEST['totalFiles'] > 10)
      {
        $setPrefs['FLASH_UPLOADED_MULTIPLE'] = 1;
      }
    }
    
    // set the privacy preference
    $setPrefs['FOTO_PRIVACY'] = $privacy;
    
    $um->setPrefs($_USER_ID, $setPrefs);
  }

  if(isset($_GET['redirect']))
  {
    header('location: ' . $_GET['redirect']);
  }
  else
  if($_GET['retrieveId'] == 1)
  {
    $count = intval(file_get_contents($cntFile = PATH_HOMEROOT . '/uploader/uploaded.txt'));
    $count++;
    $fp = fopen($cntFile, 'w+');
    fwrite($fp, $count, strlen($count));
    fclose($fp);
    echo $fotoId . ',' . intval($user_data['U_SPACEUSED'] + $image_size);
  }
  else
  if($image_name == 'Filedata')
  {
    echo '{"success"}'; // for flash uploader on mac?????? why oh why??????
  }
  include_once PATH_DOCROOT . '/garbage_collector.act.php';
error_log('');
?>
